pipeline {
  agent { label 'java17-docker' }
  tools { maven 'maven' }

  environment {
    REGISTRY = 'sunxxl'
    TAG      = 'v1'
  }

  stages {
    stage('Check Docker') {
        steps {
            sh 'whoami'
            sh 'docker ps'
        }
    }
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/sunxxlch/buynbooze-backend.git'
      }
    }

    stage('BuildAndPush') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-creds',
                                          usernameVariable: 'REG_USER',
                                          passwordVariable: 'REG_PASS')]) {
          sh 'echo $REG_PASS | docker login -u $REG_USER --password-stdin'
          script {
            def modules = ['APICloudGateway','CheckoutService','Config-Server','ProductService','EurekaServer','UserService']
            modules.each { svc ->
            def pomFile = "${env.WORKSPACE}/${svc}/pom.xml"
            if (fileExists(pomFile)) {
                echo "Found pom.xml for ${svc} at ${pomFile}"
              dir(svc) {
                sh """
                mvn -f ${pomFile} -B \
                      -Djib.to.auth.username=$REG_USER \
                      -Djib.to.auth.password=$REG_PASS \
                      clean compile jib:build
                """
              }
            } else {
             echo "Skipping ${svc} â€” pom.xml not found at ${pomFile}"
            }
            }
          }
        }
      }
    }
  }

  post {
    success { echo 'successfully built and pushed images.' }
    failure { echo 'build failed.' }
  }
}
